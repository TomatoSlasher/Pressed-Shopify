
<div class='main-content-wrapper'>
    <div class='main-content-container'>
        <div class='product-img-container' >
            <img
            class="product-img"
            src="{{ product.featured_image | img_url: '600x600' }}"
            alt="product-img"
            />
        </div>

        <div class='product-text-container' >
            <p class='product-template-title' style='font-size: 38px; font-weight: bold;'>{{product.title}}</p>
            <section class="container">

                <nav class='tab-nav'>
                    <ul class='tab-ul'>
                        <li id="tab1" class="inactive tab-li">Product Details</li>
                        <li id="tab2" class='tab-li'>Benefits</li>
                        <li id="tab3" class='tab-li'>Ingredients</li>
                    </ul>
                </nav>

                <section class="tabs">
                    <div id="tab1-content" class='tab-text' >
                        <p >
                        {{product.description}}
                        </p>
                    </div>

                    <div id="tab2-content" class='tab-text' >
                        <p >
                        Vitamin C Goals - With 610% of your daily Vitamin C per bottle, this smoothie is chock full of antioxidants.
                        No Added Sugars - No added sugars, just natural sweetness in this fruit-forward smoothie.
                        </p>
                    </div>

                    <div id="tab3-content" class='tab-text' >
                        <p >
                        Apple Juice, Orange Juice, Strawberries, Mangoes, Peaches, Lemon Juice, Elderberry Powder, Vitamin C (Ascorbic Acid)
                        </p>
                    </div>

                </section>
            </section>
            <p  style='font-size: 20px; font-weight: bold; margin-bottom: .5rem !important;' >{{product.options}}</p>
        <div class="variant-container">
                {% for variant in product.variants %}
                        <div class="selection">
                        <input id="{{variant.title}}"  name="variant" type="radio" value="{{ variant.id }}">
                        <label class='variant-item' for="{{variant.title}}">{{variant.title}}</label>
                    </div>
                {% endfor %}
            </div>

            <p class='product-template-price' style='font-size: 20px; font-weight: bold;'>{{product.price | money}}</p>

            <div class='cart-form'>
                <form class="featured-cart-form product-cart-form">
                    <div class="cart-counter-wrapper">
                    <button
                        class="cart-btn"
                        type="button"
                        onclick="this.parentNode.querySelector('[type=number]').stepDown();"
                    >
                        -
                    </button>
                    <input
                        class="cart-counter"
                        min="1"
                        type="number"
                        id="quantity"
                        name="quantity"
                        value="1"
                    />
                    <button
                        class="cart-btn"
                        type="button"
                        onclick="this.parentNode.querySelector('[type=number]').stepUp();"
                    >
                        +
                    </button>
                    </div>
                    <p
                    class="add-to-cart quick-add-to-cart template-cart"
                    class="btn"
                    >Add to cart</p>
                </form>
            </div>
        </div>

    </div>
</div>
<div class="ingredients-wrapper" >
  <svg
    class="wave-1"
    version="1.1"
    id="curved-border"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    x="0px"
    y="0px"
    viewBox="0 0 1600 116.19"
    xml:space="preserve"
  >
    <path
      class="wave"
      d="M0.1,119.43V67.45c0,0,99.87,71.51,322.45,8.12c5.56-1.66,92.01-26.52,125.74-35.72
	c77.28-21.08,219.28-41.4,311.28-38.34c233,7.77,323.98,82.1,469.23,96.61c149.64,14.94,288.45-12.46,371.26-36.99v55.34L0.1,119.43
	z"
    />
  </svg>
  <h1 class="ingredients-h1">
    <span class="all-ingredients"> All Natural</span>
    <span class="ingredients-span">Ingredients</span>
  </h1>
  <img class='ingredients-img ingredients-img' src="{{
    "strawberrynobg.png" | asset_url
  }}" alt="" />
  <div class="ingredient-text-container">
    <span class="ingredients-text">
      Our entirely plant-based juice is designed to make plant-forward living
      accessible
      <div class="shop-juices-container">
        <a href="/collections/all" class="shop-juices">Shop Juices</a>
      </div>
    </span>
  </div>
  <svg
    class="wave-2"
    version="1.1"
    id="curved-border"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    x="0px"
    y="0px"
    viewBox="0 0 1600 116.19"
    xml:space="preserve"
  >
    <path
      class="wave"
      d="M0.1,119.43V67.45c0,0,99.87,71.51,322.45,8.12c5.56-1.66,92.01-26.52,125.74-35.72
	c77.28-21.08,219.28-41.4,311.28-38.34c233,7.77,323.98,82.1,469.23,96.61c149.64,14.94,288.45-12.46,371.26-36.99v55.34L0.1,119.43
	z"
    />
  </svg>
</div>
<script>
const dynamicProduct = function (main, sec) {

    const textContainer = document.querySelector(".product-text-container");
    const imgContainer = document.querySelector(".product-img-container");
    const variantItem = document.querySelectorAll(".variant-item");
    const ingredientsWrapper = document.querySelector(".ingredients-wrapper");
    const allIngredients = document.querySelector(".all-ingredients");
    const ingredientsImg = document.querySelector(".ingredients-img");
    ingredientsImg.src="{{ product.featured_image | img_url: '600x600' }}";


    imgContainer.style.backgroundColor = `${main}`;
    textContainer.style.backgroundColor = `${sec}`;
    ingredientsWrapper.style.backgroundColor = `${sec}`;
    allIngredients.style.color = `${sec}`;

    $( ".variant-item" ).each(function(index) {
    $( this ).hover(
    function() {
    this.style.backgroundColor = `${main}`;
    }, function() {
        this.style.backgroundColor = `${sec}`;
    }
    );
    });


}
</script>

{% if product.tags contains 'greens' %}
<script>

dynamicProduct("#ACCA4E","#92B621")
</script>
{% endif %}


{% if product.tags contains 'orange' %}
<script>
dynamicProduct("#FFD545","#FFCB19")
</script>
{% endif %}

{% if product.tags contains 'rootsgreens' %}
<script>
dynamicProduct("#CE5851","#B83A32")
</script>
{% endif %}

{% if product.tags contains 'rootsapple' %}
<script>
dynamicProduct("#F3AA5B","#D28B3D")
</script>
{% endif %}

{% if product.tags contains 'rose' %}
<script>
dynamicProduct("#FBB0AE","#E47C79")
</script>
{% endif %}



{% if product.tags contains 'set' %}
<script>

dynamicProduct("#ACCA4E","#92B621")
const ingredientsImg = document.querySelector(".ingredients-img");
const productImg = document.querySelector(".product-img");

    ingredientsImg.src="{{ "greens1nobg.png" | asset_url }}"
    productImg.style.position = "absolute"
    productImg.style.top = "-3rem"

</script>
{% endif %}

{% if product.tags contains 'shots' %}
<script>

dynamicProduct("#FFD545","#FFCB19")
const ingredientsImg = document.querySelector(".ingredients-img");
const productImg = document.querySelector(".product-img");

    ingredientsImg.src="{{ "orangenobg.png" | asset_url }}"
    productImg.style.position = "absolute"
    productImg.style.top = "-4rem"

</script>
{% endif %}

{% stylesheet %}
    .main-content-wrapper{
        position: relative;
    }
    .main-content-container{
        display: flex;
        justify-content: space-between;


    }
    .product-img-container{
      background-color: #fca887;
      width: 60vw;
      padding-top: 5rem;

    }
    .product-text-container{
        background-color: #f58153;
        width: 40vw;
        padding-top: 5rem;
        padding: 7rem 4rem;
    }

    .product-img{
        margin-left: 5rem;
    }
    .product-template-title{
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #011C28
    }
    .product-cart-form{
        justify-content: center;

    }
    .template-cart{
        background-color: #011C28;
        width: 15rem;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;

    }
    .cart-counter-wrapper{
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
    }
    .main-content{
        padding: 0 !important;
    }
    .variant-container{
        display:flex;
    }
    .variant-container .selection {
    margin-bottom: 1rem;
    margin-right: 0.5em;

    }

    .variant-container .selection label {
    width:8em;
    border: 1px solid #011C28;
    border-radius: 5px;
    padding: 0.5em;
    cursor: pointer;
    }

    .variant-container .selection label:hover {
    background-color: #fca887;
    }

    .variant-container .selection input[type=radio] {
    display: none;
    }

    .variant-container .selection input[type=radio]:checked ~ label {
    background-color: #011C28 !important;
    color: white;
    }

    .tab-ul {
        display: flex;
    }

    .tab-li {
        text-decoration: none;
        cursor: pointer;
        transition: all .3s ease-in-out;
        margin-bottom: 1rem;
        margin-right: 1rem;
        font-weight:bold;

    }


    .tab-li.inactive {
    border-bottom: 1px solid;
    }

    .tab-text{
        margin-bottom: 1rem;
    }
    .container div:not(:first-of-type) {
        display: none
    }
    .recomended-title{
        font-size: 50px;
        width: 40rem;
        margin-top: 5rem;
        margin-left: 10rem;
        margin-bottom: 7rem;
    }
    .variant-icon{
        margin-right: 0.5rem;
    }

{% endstylesheet %}

<script>
const variantsItem = document.querySelectorAll(".variant-item");
const freshVariant = document.getElementById("Fresh");
const headerWrapper = document.querySelector(".header-wrapper");
headerWrapper.style.paddingBottom = '0'

freshVariant.checked = true;

const snow = '<i class="far fa-snowflake variant-icon"></i>'
const leaf = '<i class="fas fa-leaf variant-icon"></i>'
variantsItem[0].insertAdjacentHTML('afterbegin', leaf);
variantsItem[1].insertAdjacentHTML('afterbegin', snow);


$(function () {
    "use strict";
    $("nav ul li").on("click", function () {

        // Get The ID Of a When I Clicked
        var myID = $(this).attr("id");

        // Remove Class Inactive When I clicked And Add It In Siblings In Ul
        $(this).addClass("inactive").siblings().removeClass("inactive");

        // Hide The Div When i Clicked
        $(".container div").hide();

        // When Clicked In Li Get Div Same ID

        $("#" + myID + "-content").fadeIn(1000);
    });
});

const quickCart = document.querySelector(".quick-cart");
const quickCartContainer = document.querySelector(".quick-cart-container");

$('.quick-cart-clear').click( function (){
quickCart.innerHTML = ''
$.post("/cart/clear.js")

})
$('.quick-add-to-cart').click( function (){

const selected = $("input[name='variant']:checked").val();
const quantity = $("input[name='quantity']").val();

$.post("/cart/add.js", {
  items: [
    {
      quantity: quantity,
      id: selected,
    },
  ],
});

updateQuickCart()
})
const currency_symbols = {
    'USD': '$', // US Dollar
    'EUR': '€', // Euro
    'CRC': '₡', // Costa Rican Colón
    'GBP': '£', // British Pound Sterling
    'ILS': '₪', // Israeli New Sheqel
    'INR': '₹', // Indian Rupee
    'JPY': '¥', // Japanese Yen
    'KRW': '₩', // South Korean Won
    'NGN': '₦', // Nigerian Naira
    'PHP': '₱', // Philippine Peso
    'PLN': 'zł', // Polish Zloty
    'PYG': '₲', // Paraguayan Guarani
    'THB': '฿', // Thai Baht
    'UAH': '₴', // Ukrainian Hryvnia
    'VND': '₫', // Vietnamese Dong
    'TRY': "₺" // Turkish Lira
};



const updateQuickCart = () => {

    setTimeout(function(){

         $.get("/cart.js", function (data) {
        const cartData = JSON.parse(data);
        console.log(cartData);
        quickCart.innerHTML = ''

        const cartItems = cartData.items
        const cartDataMarkup = cartItems.map((data) => `
                <div class='quick-cart-item-container'>
                        <div class='quick-cart-img-container'>
                        <img class='quick-cart-img ${data.handle}' src='${data.image}'>
                        </div>
                        <div class='quick-cart-text-container'>
                            <div class='quick-cart-title-container'>
                                <a href ="${data.url}">
                                    <p  class='quick-cart-title quick-cart-item-text'>${data.product_title}</p>
                                </a>
                                <p class='quick-cart-variant quick-cart-item-text'>${data.variant_title == 'Fresh' ? leaf : snow}${data.variant_title}</p>
                            </div>
                            <div class="cart-counter-wrapper quick-cart-counter quick-cart-btn">
                                <button
                                    class="cart-btn  quick-cart-btn"
                                    type="button"
                                    onclick="this.parentNode.querySelector('[type=number]').stepDown();"
                                >
                                    -
                                </button>

                                <input
                                    class="cart-counter quick-cart-btn"
                                    min="1"
                                    type="number"
                                    id="quantity"
                                    name="cart-quantity"
                                    value="${data.quantity}"
                                />

                                <button
                                    class="cart-btn quick-cart-btn"
                                    type="button"
                                    onclick="this.parentNode.querySelector('[type=number]').stepUp();"
                                >
                                    +
                                </button>
                            </div>
                            <p class='quick-cart-price quick-cart-item-text'>${currency_symbols[cartData.currency]}${data.final_line_price /100}</p>
                        </div>
                </div>

            `
        ).join("")
        quickCart.insertAdjacentHTML('afterbegin', cartDataMarkup)
        const quickCartAmount = document.querySelector(".quick-cart-amount");
        quickCartAmount.innerHTML = ''
        const totalAmountMarkup = `${currency_symbols[cartData.currency]}${cartData.items_subtotal_price / 100}`

        quickCartAmount.insertAdjacentHTML('afterbegin', totalAmountMarkup)


    });

    }, 600);


}
updateQuickCart()

$(document).click((event) => {

 if ($("#quick-cart-wrapper").hasClass("cart-delay")){

    if (!$(event.target).closest('#quick-cart-wrapper').length) {

        $( ".quick-cart-container").addClass('cart-animation-close')
        $( ".quick-cart-container").removeClass('cart-animation-open');
        $( ".quick-cart-container").removeClass('cart-delay')
    }
 }

});

$('.quick-add-to-cart').click( function () {
    setTimeout( ()=>{
        $( ".quick-cart-container").addClass('cart-delay')
    },100)

    $( ".quick-cart-container").addClass('cart-animation-open')
    $( ".quick-cart-container").removeClass('cart-animation-close')
});
$('.cart-times').click( function () {
    $( ".quick-cart-container").addClass('cart-animation-close')
    $( ".quick-cart-container").removeClass('cart-animation-open')
    $( ".quick-cart-container").removeClass('cart-delay')
});
</script>

